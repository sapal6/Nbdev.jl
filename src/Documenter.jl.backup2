### A Nbdev script file ###
### Autogenerated file. Don't modify. ###

module Documenter
#export
using ReusePatterns

#export
using Images, FileIO

#export
begin
include("../src/Export.jl")
#const Nb = Export.Nb 
end

#export
load_nb=Export.load_nb

#export
include("../src/ConfigReader.jl")

#export
include("../src/CodeRunner.jl")

#export
#execute_code=CodeRunner.execute_code

#export
#TODO:reusepattrens behaves weirdly in pluyto notebook need to fix
#for now just restart the notebook
begin
struct Journal
	notebook::Export.Nb
	codeWithOp::String
end
	
@forward((Journal, :codeWithOp),Export.Nb)
end

#export
function img(img_path::String)
	load(img_path)
end

#export
using Publish

#export
function newsitegen(configpath::String="../settings.ini")
	config=read_conf(configpath)
	if isdir("../docs")
		error("$(config["lib_name"])_docs directory is already present")
	else
	    #setup("../$(config["lib_name"])_docs")
		setup("../")
		mkdir("../docs")
	end
end

#export
testNb=load_nb("Documenter.jl", "md")

#export
chunk=testNb.nuclei[1].code

#export
CodeRunner.execute_code(chunk)

#export
parsedcode=testNb.nuclei[15].parsedcode

#export
CodeRunner.execute_code("02_documenter.jl", parsedcode)

#export
function findExampleChunks(code_chunk)
	if .!startswith(code_chunk, "md")
		return "$code_chunk\n"
	else
		return ""
	end
end

#export
function collateExampleChunks(code_cells::Array)
	return join(map(code_chunk->findExampleChunks(code_chunk), code_cells))
end

#export
function collateMdChunks(code_cells::Array)
	return [md_chunk for md_chunk in code_cells if startswith(md_chunk, "md")]
end

#export
function collateChunksForDoc(file::String)
	code_cells = collect_codecells(file)
	vcat(collateMdChunks(code_cells::Array), collateExampleChunks(code_cells))
end

#export
function export2MD()
	config=read_conf("../settings.ini")
	files=[file for file in readfilenames() if getfile_extension(file)== ".jl"]
	export_content(files, "../docs")
end

end